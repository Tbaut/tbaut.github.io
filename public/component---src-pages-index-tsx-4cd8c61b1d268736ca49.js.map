{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["IndexPage","props","winHeight","setWindowHeight","useState","useEffect","window","innerHeight","addEventListener","svg","useRef","current","sWidth","clientWidth","tText","querySelector","tWidth","getBoundingClientRect","width","tInnerText","innerHTML","split","length","forEach","e","i","tSpan","n","v","document","createElementNS","p","setAttributeNS","createSVGElement","dy","x","appendChild","setTimeout","_svg$current","_svg$current$style","style","height","margin","fontSize","parseInt","getComputedStyle","getPropertyValue","React","createElement","Layout","placeholder","SEO","lang","title","data","site","siteMetadata","description","className","viewBox","preserveAspectRatio","ref","capitalizeTitleOnHome","header","toUpperCase","id","patternUnits","y","xlinkHref","titleImage","fill","textAnchor","introTag","Link","to","SocialLinks"],"mappings":"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","file":"component---src-pages-index-tsx-4cd8c61b1d268736ca49.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/seo\";\nimport { Link } from \"gatsby\";\nimport SocialLinks from \"../components/sociallinks\";\nimport \"../style/wall.less\";\n\nconst IndexPage = (props: any) => {\n  const [winHeight, setWindowHeight] = useState<string | number>(\"100vh\");\n\n  const createSVGElement = function (n: any, v: any) {\n    n = document.createElementNS(\"http://www.w3.org/2000/svg\", n);\n    for (const p in v) n.setAttributeNS(null, p, v[p]);\n    return n;\n  };\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight);\n    window.addEventListener(\"resize\", () => {\n      setWindowHeight(window.innerHeight);\n    });\n  }, []);\n\n  const svg = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (svg?.current) {\n      const sWidth = svg.current.clientWidth,\n        tText = svg.current.querySelector(\"text\");\n      let tWidth = tText?.getBoundingClientRect().width;\n\n      if (tWidth && tWidth > sWidth) {\n        const tInnerText = tText?.innerHTML;\n        if (tText && tInnerText && tInnerText.split(\" \").length > 1) {\n          tText.innerHTML = \"\";\n          tInnerText.split(\" \").forEach((e: any, i: any) => {\n            const tSpan = createSVGElement(\"tspan\", {\n              dy: i === 0 ? \"0em\" : \".8em\",\n              x: \"50\",\n            });\n            tSpan.innerHTML = e;\n            tText.appendChild(tSpan);\n          });\n          setTimeout(() => {\n            if (svg?.current?.style?.height) {\n              svg.current.style.height = `${tText.getBoundingClientRect().height + 70}`;\n              svg.current.style.margin = \"15px auto\";\n            }\n          }, 250);\n        } else {\n          while (tText && tWidth > sWidth) {\n            const fontSize = parseInt(window.getComputedStyle(tText, null).getPropertyValue(\"font-size\"));\n            tText.style.fontSize = fontSize - 1 + \"px\";\n            tWidth = tText.getBoundingClientRect().width;\n          }\n        }\n      }\n    }\n  });\n\n  return (\n    <Layout placeholder={false}>\n      <SEO\n        lang=\"en\"\n        title={props.data.site.siteMetadata.title}\n        description=\"Welcome to my personal website. I am a TS/JS developer passionate about web3, privacy and UX! I'm also a hobby photographer, shooting mostly when I travel.\"\n      />\n      <div className=\"wall\" style={{ height: winHeight + \"px\" }}>\n        <div className=\"intro container\">\n          <div className=\"main-title text-primary\">\n            <svg width=\"90%\" height=\"220px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid slice\" ref={svg}>\n              {props.data.site.siteMetadata.capitalizeTitleOnHome\n                ? props.data.site.siteMetadata.header.toUpperCase()\n                : props.data.site.siteMetadata.header}\n              <pattern id=\"wallPattern\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\">\n                <rect x=\"0\" y=\"0\" className=\"fill-primary\" width=\"100\" height=\"100\" />\n                <image\n                  xlinkHref={props.data.site.siteMetadata.titleImage}\n                  height=\"100\"\n                  width=\"100\"\n                  y=\"0\"\n                  preserveAspectRatio=\"none\"\n                />\n              </pattern>\n              <text fill=\"url(#wallPattern)\" textAnchor=\"middle\" x=\"50\" y=\"50\">\n                {props.data.site.siteMetadata.capitalizeTitleOnHome\n                  ? props.data.site.siteMetadata.header.toUpperCase()\n                  : props.data.site.siteMetadata.header}\n              </text>\n            </svg>\n          </div>\n          <p className=\"tag-line text-secondary\">{props.data.site.siteMetadata.introTag}</p>\n          <p className=\"caption text-tertiary\">{props.data.site.siteMetadata.description}</p>\n          <Link to=\"/about\" className=\"btn\">\n            ABOUT ME\n          </Link>\n        </div>\n        <div className=\"social-buttons\">\n          <SocialLinks />\n        </div>\n      </div>\n      {/* <PortfolioList /> */}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        header\n        title\n        capitalizeTitleOnHome\n        titleImage\n        introTag\n        description\n        social {\n          name\n          url\n          icon\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}