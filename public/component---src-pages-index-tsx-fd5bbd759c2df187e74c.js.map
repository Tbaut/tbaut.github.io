{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["IndexPage","props","useState","winHeight","setWindowHeight","useEffect","window","innerHeight","addEventListener","svg","useRef","current","sWidth","clientWidth","tText","querySelector","tWidth","getBoundingClientRect","width","tInnerText","innerHTML","split","length","forEach","e","i","tSpan","n","v","p","document","createElementNS","setAttributeNS","createSVGElement","dy","x","appendChild","setTimeout","style","height","margin","fontSize","parseInt","getComputedStyle","getPropertyValue","placeholder","lang","title","data","site","siteMetadata","className","viewBox","preserveAspectRatio","ref","capitalizeTitleOnHome","header","toUpperCase","id","patternUnits","y","xlinkHref","titleImage","fill","textAnchor","introTag","description","to","query"],"mappings":"4PAwGeA,UA/FG,SAACC,GAAe,MACKC,mBAA0B,SAAxDC,EADyB,KACdC,EADc,KAShCC,qBAAU,WACRD,EAAgBE,OAAOC,aACvBD,OAAOE,iBAAiB,UAAU,WAChCJ,EAAgBE,OAAOC,kBAExB,IAEH,IAAME,EAAMC,iBAAsB,MAqClC,OAnCAL,qBAAU,WACR,GAAII,aAAJ,EAAIA,EAAKE,QAAS,CAChB,IAAMC,EAASH,EAAIE,QAAQE,YACzBC,EAAQL,EAAIE,QAAQI,cAAc,QAChCC,EAASF,aAAH,EAAGA,EAAOG,wBAAwBC,MAE5C,GAAIF,GAAUA,EAASJ,EAAQ,CAC7B,IAAMO,EAAaL,aAAH,EAAGA,EAAOM,UAC1B,GAAIN,GAASK,GAAcA,EAAWE,MAAM,KAAKC,OAAS,EACxDR,EAAMM,UAAY,GAClBD,EAAWE,MAAM,KAAKE,SAAQ,SAACC,EAAQC,GACrC,IAAMC,EA1BS,SAAUC,EAAQC,GAEzC,IAAK,IAAMC,KADXF,EAAIG,SAASC,gBAAgB,6BAA8BJ,GAC3CC,EAAGD,EAAEK,eAAe,KAAMH,EAAGD,EAAEC,IAC/C,OAAOF,EAuBeM,CAAiB,QAAS,CACtCC,GAAU,IAANT,EAAU,MAAQ,OACtBU,EAAG,OAELT,EAAMN,UAAYI,EAClBV,EAAMsB,YAAYV,MAEpBW,YAAW,WAAM,SACX5B,SAAJ,UAAIA,EAAKE,eAAT,iBAAI,EAAc2B,aAAlB,aAAI,EAAqBC,UACvB9B,EAAIE,QAAQ2B,MAAMC,OAAlB,IAA8BzB,EAAMG,wBAAwBsB,OAAS,IACrE9B,EAAIE,QAAQ2B,MAAME,OAAS,eAE5B,UAEH,KAAO1B,GAASE,EAASJ,GAAQ,CAC/B,IAAM6B,EAAWC,SAASpC,OAAOqC,iBAAiB7B,EAAO,MAAM8B,iBAAiB,cAChF9B,EAAMwB,MAAMG,SAAWA,EAAW,EAAI,KACtCzB,EAASF,EAAMG,wBAAwBC,YAQ/C,kBAAC,IAAD,CAAQ2B,aAAa,GACnB,kBAAC,IAAD,CAAKC,KAAK,KAAKC,MAAO9C,EAAM+C,KAAKC,KAAKC,aAAaH,QACnD,yBAAKI,UAAU,OAAOb,MAAO,CAAEC,OAAQpC,EAAY,OACjD,yBAAKgD,UAAU,mBACb,yBAAKA,UAAU,2BACb,yBAAKjC,MAAM,MAAMqB,OAAO,QAAQa,QAAQ,cAAcC,oBAAoB,iBAAiBC,IAAK7C,GAC7FR,EAAM+C,KAAKC,KAAKC,aAAaK,sBAC1BtD,EAAM+C,KAAKC,KAAKC,aAAaM,OAAOC,cACpCxD,EAAM+C,KAAKC,KAAKC,aAAaM,OACjC,6BAASE,GAAG,cAAcC,aAAa,iBAAiBzC,MAAM,MAAMqB,OAAO,OACzE,0BAAMJ,EAAE,IAAIyB,EAAE,IAAIT,UAAU,eAAejC,MAAM,MAAMqB,OAAO,QAC9D,2BACEsB,UAAW5D,EAAM+C,KAAKC,KAAKC,aAAaY,WACxCvB,OAAO,MACPrB,MAAM,MACN0C,EAAE,IACFP,oBAAoB,UAGxB,0BAAMU,KAAK,oBAAoBC,WAAW,SAAS7B,EAAE,KAAKyB,EAAE,MACzD3D,EAAM+C,KAAKC,KAAKC,aAAaK,sBAC1BtD,EAAM+C,KAAKC,KAAKC,aAAaM,OAAOC,cACpCxD,EAAM+C,KAAKC,KAAKC,aAAaM,UAIvC,uBAAGL,UAAU,2BAA2BlD,EAAM+C,KAAKC,KAAKC,aAAae,UACrE,uBAAGd,UAAU,yBAAyBlD,EAAM+C,KAAKC,KAAKC,aAAagB,aACnE,kBAAC,IAAD,CAAMC,GAAG,SAAShB,UAAU,OAA5B,aAIF,yBAAKA,UAAU,kBACb,kBAAC,IAAD,UAUH,IAAMiB,EAAQ","file":"component---src-pages-index-tsx-fd5bbd759c2df187e74c.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/seo\";\nimport { Link } from \"gatsby\";\nimport SocialLinks from \"../components/sociallinks\";\nimport PortfolioList from \"../components/list-portfolio\";\nimport \"../style/wall.less\";\n\nconst IndexPage = (props: any) => {\n  const [winHeight, setWindowHeight] = useState<string | number>(\"100vh\");\n\n  const createSVGElement = function (n: any, v: any) {\n    n = document.createElementNS(\"http://www.w3.org/2000/svg\", n);\n    for (const p in v) n.setAttributeNS(null, p, v[p]);\n    return n;\n  };\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight);\n    window.addEventListener(\"resize\", () => {\n      setWindowHeight(window.innerHeight);\n    });\n  }, []);\n\n  const svg = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (svg?.current) {\n      const sWidth = svg.current.clientWidth,\n        tText = svg.current.querySelector(\"text\");\n      let tWidth = tText?.getBoundingClientRect().width;\n\n      if (tWidth && tWidth > sWidth) {\n        const tInnerText = tText?.innerHTML;\n        if (tText && tInnerText && tInnerText.split(\" \").length > 1) {\n          tText.innerHTML = \"\";\n          tInnerText.split(\" \").forEach((e: any, i: any) => {\n            const tSpan = createSVGElement(\"tspan\", {\n              dy: i === 0 ? \"0em\" : \".8em\",\n              x: \"50\",\n            });\n            tSpan.innerHTML = e;\n            tText.appendChild(tSpan);\n          });\n          setTimeout(() => {\n            if (svg?.current?.style?.height) {\n              svg.current.style.height = `${tText.getBoundingClientRect().height + 70}`;\n              svg.current.style.margin = \"15px auto\";\n            }\n          }, 250);\n        } else {\n          while (tText && tWidth > sWidth) {\n            const fontSize = parseInt(window.getComputedStyle(tText, null).getPropertyValue(\"font-size\"));\n            tText.style.fontSize = fontSize - 1 + \"px\";\n            tWidth = tText.getBoundingClientRect().width;\n          }\n        }\n      }\n    }\n  });\n\n  return (\n    <Layout placeholder={false}>\n      <SEO lang=\"en\" title={props.data.site.siteMetadata.title} />\n      <div className=\"wall\" style={{ height: winHeight + \"px\" }}>\n        <div className=\"intro container\">\n          <div className=\"main-title text-primary\">\n            <svg width=\"90%\" height=\"220px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid slice\" ref={svg}>\n              {props.data.site.siteMetadata.capitalizeTitleOnHome\n                ? props.data.site.siteMetadata.header.toUpperCase()\n                : props.data.site.siteMetadata.header}\n              <pattern id=\"wallPattern\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\">\n                <rect x=\"0\" y=\"0\" className=\"fill-primary\" width=\"100\" height=\"100\" />\n                <image\n                  xlinkHref={props.data.site.siteMetadata.titleImage}\n                  height=\"100\"\n                  width=\"100\"\n                  y=\"0\"\n                  preserveAspectRatio=\"none\"\n                />\n              </pattern>\n              <text fill=\"url(#wallPattern)\" textAnchor=\"middle\" x=\"50\" y=\"50\">\n                {props.data.site.siteMetadata.capitalizeTitleOnHome\n                  ? props.data.site.siteMetadata.header.toUpperCase()\n                  : props.data.site.siteMetadata.header}\n              </text>\n            </svg>\n          </div>\n          <p className=\"tag-line text-secondary\">{props.data.site.siteMetadata.introTag}</p>\n          <p className=\"caption text-tertiary\">{props.data.site.siteMetadata.description}</p>\n          <Link to=\"/about\" className=\"btn\">\n            ABOUT ME\n          </Link>\n        </div>\n        <div className=\"social-buttons\">\n          <SocialLinks />\n        </div>\n      </div>\n      {/* <PortfolioList /> */}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        header\n        title\n        capitalizeTitleOnHome\n        titleImage\n        introTag\n        description\n        social {\n          name\n          url\n          icon\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}